% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addBoundaryOD.r
\name{addBoundaryOD}
\alias{addBoundaryOD}
\title{Add Boundary Nodes}
\usage{
addBoundaryOD(ODrefined, in2outNodes, out2inNodes)
}
\arguments{
\item{ODrefined}{An OD data frame with node IDs and location IDs.}

\item{in2outNodes}{The nodes that are going outside the sub-region.}

\item{out2inNodes}{The nodes that are going inside the sub-region.}
}
\value{
The output is a new OD data frame with the added boundary nodes of
the sub-region.
}
\description{
This function adds boundary nodes to a refined OD data frame based on the
given going-inside nodes and going-outside nodes of the sub-region.
}
\examples{
location <- c(osmdata::getbb("oxford uk"))
wholenet <- getnet("oxford uk")
oxford.od <- ODdata("oxford uk")
regn <- c(-1.24, 51.71, -1.19, 51.79) # Selected a sub-region
subbox <- vec2bbox(regn)
mainnet <- mainnet(wholenet)
cntrnet <- contractNet(mainnet)
ODlist <- getODnodes(cntrnet, oxford.od)
oxford.od.nodes <- ODlist[[1]]
oxford.main.nodes <- ODlist[[2]]
oxford.od <- addODnodeID(oxford.main.nodes, oxford.od)
oxford.od.matrix <- ODwithdemand(oxford.od)
OxfordOD <- renameODdata(oxford.od.matrix)
odlist2 <- od2network(OxfordOD, oxford.od.nodes, cntrnet)
OxfordODre <- odlist2[[1]]

in2outFrom <- tailor(subbox, OxfordODre, od="from")
in2outTo <- tailor(subbox, OxfordODre, od="to", "outside")

fromIDs <- getFromToID(in2outFrom, "from")
toIDs <- getFromToID(in2outTo, "to")
in2outNodes <- getboundaryNodes(cntrnet, subbox, OxfordODre,
                                fromIDs, toIDs, "in2out")

out2inFrom <- tailor(subbox, OxfordODre, od="from", "outside")
out2inTo <- tailor(subbox, OxfordODre, od="to")

fromIDs <- getFromToID(out2inFrom, "from")
toIDs <- getFromToID(out2inTo, "to")
out2inNodes <- getboundaryNodes(cntrnet, subbox, OxfordODre,
                                fromIDs, toIDs, "out2in")

newODdata <- addBoundaryOD(OxfordODre, in2outNodes, out2inNodes)
head(newODdata)

}
\keyword{addBoundaryOD}
