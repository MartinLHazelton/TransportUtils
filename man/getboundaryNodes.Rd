% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getboundaryNodes.r
\name{getboundaryNodes}
\alias{getboundaryNodes}
\title{Get Boundary Nodes}
\usage{
getboundaryNodes(wholenet, subbox, infoData, fromIDs, toIDs, status)
}
\arguments{
\item{wholenet}{Reference network with node IDs and lon-lat coordinates.}

\item{subbox}{A sub-region of the reference network.}

\item{infoData}{The reference data frame.}

\item{fromIDs}{The starting node IDs of routes.}

\item{toIDs}{The ending node IDs of routes.}

\item{status}{Specified situation on "going-inside" (out2in) or "going
outside" (in2out).}
}
\value{
The output is the boundary nodes, which is identified by shortest
paths.
}
\description{
This function gets boundary nodes based on the boundary-crossed routes.
}
\examples{
wholenet <- getnet("oxford uk")
oxford.od <- ODdata("oxford uk")
regn <- c(-1.24, 51.71, -1.19, 51.79) # Selected a sub-region
subbox <- vec2bbox(regn)
mainnet <- mainnet(wholenet)
cntrnet <- contractNet(mainnet)
ODlist <- getODnodes(cntrnet, oxford.od)
oxford.od.nodes <- ODlist[[1]]
oxford.main.nodes <- ODlist[[2]]
oxford.od <- addODnodeID(oxford.main.nodes, oxford.od)
oxford.od.matrix <- ODwithdemand(oxford.od)
OxfordOD <- renameODdata(oxford.od.matrix)
odlist2 <- od2network(OxfordOD, oxford.od.nodes, cntrnet)
OxfordODre <- odlist2[[1]]

in2outFrom <- tailor(subbox, OxfordODre, od="from")
in2outTo <- tailor(subbox, OxfordODre, od="to", "outside")

fromIDs <- getFromToID(in2outFrom, "from")
toIDs <- getFromToID(in2outTo, "to")
in2outNodes <- getboundaryNodes(cntrnet, subbox, OxfordODre,
                                fromIDs, toIDs, "in2out")

shownetwork(osmdata::getbb("oxford uk"), wholenet, cntrnet)
addbox(regn, "blue")
with(
  in2outNodes,
  points(in2out_lon, in2out_lat, pch = 4, col= "green")
)

}
\keyword{getboundaryNodes}
